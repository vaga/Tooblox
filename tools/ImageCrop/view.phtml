<div class="bloc">
    <h1>Tool : Image Crop</h1>
     <form id="upload_form" enctype="multipart/form-data" method="post" action="upload.php" onsubmit="return checkForm()">
        <input type="hidden" id="x1" name="x1" />
        <input type="hidden" id="y1" name="y1" />
        <input type="hidden" id="x2" name="x2" />
        <input type="hidden" id="y2" name="y2" />

        <section class="block_sections">
        	<p>Step one, please select image file :</p>
	    	<p><input type="file" name="image_file" id="image_file" onchange="fileSelectHandler()" /></p>
        </section>

        <section class="block_sections">
        	<p>Step two, please select a crop region :</p>
            <div id="preview-box"><img id="preview" src="images/drop.png"/></div><br /><br />

            <div class="info center">
                <div><label>File size</label> <input type="text" id="filesize" name="filesize" class="input-text"/></div>
                <div><label>Image dimension</label> <input type="text" id="filedim" name="filedim" class="input-text"/></div>
                <div><label>Width</label> <input type="text" id="w" name="w" class="input-text"/></div>
                <div><label>Height</label> <input type="text" id="h" name="h" class="input-text"/></div>
                <div><label>Type</label> <input type="text" id="filetype" name="filetype" class="input-text"/></div>
            </div>

            <input type="submit" value="Upload"/>
        </section>
    </form>
</div>

<script src="js/dojo.js"></script>
<script src="js/jcrop/jquery.Jcrop.min.js"></script>
<script src="js/jcrop/jquery.color.js"></script>
<script>
	// convert bytes into friendly format
	function bytesToSize(bytes) {
	    var sizes = ['Bytes', 'KB', 'MB'];
	    if (bytes == 0) return 'n/a';
	    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
	    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];
	};

	// check for selected crop region
	function checkForm() {
	    if (parseInt($('#w').val())) return true;
	    errorHandler('Someting bad happened... Please select a crop region and then press Upload');
	    return false;
	};

	// update info by cropping (onChange and onSelect events handler)
	function updateInfo(e) {
	    $('#x1').val(e.x);
	    $('#y1').val(e.y);
	    $('#x2').val(e.x2);
	    $('#y2').val(e.y2);
	    $('#w').val(e.w);
	    $('#h').val(e.h);
	};

	// clear info by cropping (onRelease event handler)
	function clearInfo() {
	    $('.info #w').val('');
	    $('.info #h').val('');
	};

	function fileSelectHandler() {

	    var oFile = $('#image_file')[0].files[0];

	    // check for image type (jpg and png are allowed)
	    var rFilter = /^(image\/jpeg|image\/png)$/i;
	    if (! rFilter.test(oFile.type)) {
	        errorHandler('Someting bad happened... Please select a valid image file (jpg and png are allowed)');
	        return;
	    }

	    // check for file size
	    if (oFile.size > 250 * 1024) {
	        errorHandler('Someting bad happened... You have selected too big file, please select a one smaller image file');
	        return;
	    }

	    // preview element
	    var oImage = document.getElementById('preview');

	    // prepare HTML5 FileReader
	    var oReader = new FileReader();
	        oReader.onload = function(e) {

	        // e.target.result contains the DataURL which we can use as a source of the image
	        oImage.src = e.target.result;
	        oImage.onload = function () { // onload event handler

	            // display step 2
	            $('.step2').fadeIn(500);

	            // display some basic image info
	            var sResultFileSize = bytesToSize(oFile.size);
	            $('#filesize').val(sResultFileSize);
	            $('#filetype').val(oFile.type);
	            $('#filedim').val(oImage.naturalWidth + ' x ' + oImage.naturalHeight);

	            // Create variables (in this scope) to hold the Jcrop API and image size
	            var jcrop_api, boundx, boundy;

	            // destroy Jcrop if it is existed
	            if (typeof jcrop_api != 'undefined')
	                jcrop_api.destroy();

	            // initialize Jcrop
	            $('#preview').Jcrop({
	                minSize: [32, 32], // min crop size
	                bgFade: true, // use fade effect
	                bgOpacity: .3, // fade opacity
	                onChange: updateInfo,
	                onSelect: updateInfo,
	                onRelease: clearInfo
	            }, function(){

	                // use the Jcrop API to get the real image size
	                var bounds = this.getBounds();
	                boundx = bounds[0];
	                boundy = bounds[1];

	                // Store the Jcrop API in the jcrop_api variable
	                jcrop_api = this;
	            });
	        };
	    };

	    // read selected file as DataURL
	    oReader.readAsDataURL(oFile);

	}
</script>